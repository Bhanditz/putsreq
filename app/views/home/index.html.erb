<div class="row">
  <div class="span10">
    <div class="">
      <header>
        <%= image_tag 'logo.png' %>
        <h3><em>PutsReq</em> lets you record HTTP requests and simulate responses like no other tool available. Try it now!</h3>
        <%= form_for :bucket, url: buckets_path do |f| %>
          <button class="btn btn-primary btn-large">Create a PutsReq</button>
        <% end %>
      </header>
      <section class="start">
        <% if @buckets.any?  %>
          <div class="history">
            <h4 class="bm0 tm0">History</h4>
            <small>View and manage your previously created PutsReqs:</small>
            <ul class="tm5">
              <% @buckets.each do |bucket| %>
                <li><%= link_to "#{bucket.name} (#{bucket.requests_count})", bucket_path(bucket.token) %></li>
              <% end %>
            </ul>
          </div>
        <% end %>
        <h4>Record the requests sent or received</h4>
        <p>Change your target URL to a PutsReq URL, so you will be able to inspect all headers and body being sent.
        You can also debug callbacks from external services by configuring a PutsReq URL instead of your Webhook URL.</p>
        <h4 class="tm20">Simulate responses</h4>
        <p>PutsReq is the easiest way to simulate/stub HTTP responses. You can define the response status, headers and body with JavaScript using the <a href="https://github.com/phstc/putsreq#response-builder">Response Builder</a>.
        If you don't want to test against the real API, but you know how to simulate (mock) the response, you can do that using a Response Builder.</p>
        <p>Some use cases:</p>
        <ul>
          <li>Get the real response once then create a Response Builder simulating it and use PutsReq for the next calls.</li>
          <li>Use PutsReq for your integration tests to verify if your application is making the HTTP requests as expected <a href="https://github.com/phstc/putsreq_integration_sample/blob/master/spec/acceptance/create_user_spec.rb">by checking the last recorded request</a>.</li>
          <li>To do some benchmarks by checking the First and Last request timestamps, or by checking the numbers of requests made within a period.</li>
        </ul>
      </section>
    </div>
  </div>
</div>
